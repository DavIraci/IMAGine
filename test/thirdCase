

img im="./../test/Images/pencils.jpg";

wi=width(im);
he=height(im);
ba=bands(im);
mi=min(im);
ma=max(im);
avg=average(im);

print("Width: " + wi + " Height: " + he + " Bands: " + ba + " Min: " + mi + " Max: " + ma + " Avg: " + avg);


list outNames=
{"inverted","hsv","equalized","normalised",
"canny","sobel","sharpen","converted","added",
"subtracted","rotated","flipped","gaussianBlu",
"smartCrop","zoomed","cropped"};

list outLi={};
foreach(element:outNames){
	//temp="./../test/Images/Result/"+element +".jpg";
	//print(element);
	//push(outLi,"./../test/Images/Result/" + element + ".jpg");
	//push(outLi,temp);
}
//print(outLi);

//i=0;
//while(i<20)do{
	//push(outLi,"./../test/Images/Result/" + i + ".jpg");
	//i=i+1;
//}
//print(outLi);



img inverted=invert(im,get(outLi,1));
img differentColor=convertColorSpace(im,get(outLi,2),"hsv");
img equalized=histEq(im,get(outLi,3));
img normalised=normalise(im,get(outLi,4));
img cannyImg=canny(im,get(outLi,5));
img sobelImg=sobel(im,get(outLi,6));
img sharpened=sharpen(im,get(outLi,7));
img converted=convert(im,get(outLi,8));
img added=add(im,equalized,get(outLi,9));
img subtracted=subtract(im,sobelImg,get(outLi,10));
img rotated=rotate(im,get(outLi,11),45.7);
img flipped=flip(im,get(outLi,12),"hor");
img gaussianBlurred=gaussianBlur(im,get(outLi,13),1);
img smartCropped=smartCrop(im,get(outLi,14),200,200);
img zommed=zoom(im,get(outLi,15),5,5);
img cropped=crop(im,get(outLi,16),50,50,50,50);
