Terminals unused in grammar

    IF
    PATH


Rules useless in parser due to conflicts

    4 expr: %empty


State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: flow $end

    1 flow: %empty
    2     | flow expr EOL
    3     | flow EOL

    4 expr: %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258)
    EOL (259) 2 3
    PATH <str> (260)


Nonterminals, with rules where they appear

    $accept (6)
        on left: 0
    flow (7)
        on left: 1 2 3
        on right: 0 2 3
    expr <str> (8)
        on left: 4
        on right: 2


State 0

    0 $accept: . flow $end

    $default  reduce using rule 1 (flow)

    flow  go to state 1


State 1

    0 $accept: flow . $end
    2 flow: flow . expr EOL
    3     | flow . EOL

    $end  shift, and go to state 2
    EOL   shift, and go to state 3

    EOL  [reduce using rule 4 (expr)]

    expr  go to state 4


State 2

    0 $accept: flow $end .

    $default  accept


State 3

    3 flow: flow EOL .

    $default  reduce using rule 3 (flow)


State 4

    2 flow: flow expr . EOL

    EOL  shift, and go to state 5


State 5

    2 flow: flow expr EOL .

    $default  reduce using rule 2 (flow)
